language: go

# get filnames of all committed files to git
env:
  - CHANGED_FILES="$(git diff --name-only $TRAVIS_COMMIT_RANGE)"

# user docker services
#services:
#  - docker

# install comply
install:
  - go get github.com/strongdm/comply

# for on-demand procedure files, 
# Note: 'on-demand' will get executed only on push/pull request events
# execute the script:
#    - it will  parse the file and 
#    - run 'comply proc <procedure_id>'
before_script:
  - sed -i "s/JIRA_USERNAME/$COMPLY_JIRA_USERNAME/g" comply.yml
  - sed -i "s/JIRA_PASSWORD/$COMPLY_JIRA_PASSWORD/g" comply.yml
  - if [ "$TRAVIS_EVENT_TYPE" != "cron" ];
    then ./scripts/run_proc.sh;
    fi

# if TRAVIS_EVENT is a cron, run the scheduler so that tickets are created.
# else then the event is a push/pull request event from github, so just perform a comply build
script:
  - if [ "$TRAVIS_EVENT_TYPE" == "cron" ]; 
    then comply scheduler; 
    else comply build;
    fi

# if TRAVIS_EVENT is a cron, copy the state files to s3 bucket
# else copy the output directory files to s3 bucket
# *********The push commands can be executed here**********
#before_deploy:
#  - copy static files to s3


# prevent Travis from resetting the working dir and deleting all changes made during the build with the skip_cleanup flag
deploy:
  - skip_cleanup: true

# prevent Travis from resetting the working dir and deleting all changes made during the build with the skip_cleanup flag
#deploy:
#  - provider: s3
#    access_key_id: $AWS_ACCESS_KEY_ID 
#    secret_access_key: $AWS_SECRET_ACCESS_KEY
#    bucket: "surjitsoc2"
#    local_dir: output
#    skip_cleanup: true
#  - provider: s3
#    access_key_id: "YOUR AWS ACCESS KEY"
#    secret_access_key: "YOUR AWS SECRET KEY"
#    bucket: "Second S3 Bucket"
#    skip_cleanup: true
